# Code Quality Standards
max_cyclomatic_complexity = 5
max_line_length = 100
min_test_coverage = 90

# Documentation Requirements
docstring_style = "google"
require_docstrings = true
require_type_hints = true
require_examples = true

# Project Structure
src_layout = true
tests_dir = "tests"
docs_dir = "docs"
scripts_dir = "scripts"

# Development Practices
branch_prefix = "feature/"
commit_convention = "conventional"
require_pre_commit = true
require_task_automation = true
use_taskfile = true  # Use tasks defined in Taskfile.yaml (e.g., "task lint", "task test")

# Test-Driven Development
require_tests_first = true  # Write tests before implementing features
test_commit_order = true   # Tests must be committed before or with implementation
test_naming = "test_${feature}_${scenario}"  # Naming convention for test files/functions

# Design Practices
prefer_design_patterns = true  # Use established design patterns where applicable
design_patterns = [
    "factory",      # For object creation
    "strategy",     # For interchangeable algorithms
    "observer",     # For event handling
    "repository",   # For data access
    "dependency_injection"  # For loose coupling
]
document_patterns = true  # Document which patterns are used and why
pattern_threshold = "3+"  # Apply patterns when similar code appears 3+ times

# Code Review Standards
max_file_changes = 500
require_tests = true
require_documentation = true

# Dependencies
python_min_version = "3.11"
use_uv = true
use_ruff = true
use_mypy = true

# Documentation Tools
use_mkdocs = true
use_mkdocstrings = true
use_gen_files = true

# Testing
test_framework = "pytest"
require_coverage_report = true
require_type_checking = true
