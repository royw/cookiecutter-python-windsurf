name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:

  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: |
            {{ cookiecutter.python_version }}

      - name: Set up uv
        uses: astral-sh/setup-uv@v1

      - name: Create venv and install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          uv pip install -e ".[dev,docs]"

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

      - name: Run tests
        run: |
          source .venv/bin/activate
          uv run --python .venv/bin/python pytest tests/ --cov=src/ --cov-report=xml

      - name: Upload coverage to Codecov
        if: |
          {% raw %}${{ github.actor != 'nektos/act' }}{% endraw %}
        uses: codecov/codecov-action@v4
        with:
          token: |
            {% raw %}${{ secrets.CODECOV_TOKEN }}{% endraw %}
          file: ./coverage.xml
          fail_ci_if_error: true

  type-check:
    name: Type check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: |
            {{ cookiecutter.python_version }}

      - name: Set up uv
        uses: astral-sh/setup-uv@v1

      - name: Create venv and install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          uv pip install -e ".[dev]"

      - name: Run mypy
        run: |
          source .venv/bin/activate
          uv run --python .venv/bin/python mypy src/ tests/

  docs:
    name: Build docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: |
            {{ cookiecutter.python_version }}

      - name: Set up uv
        uses: astral-sh/setup-uv@v1

      - name: Create venv and install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          uv pip install -e ".[docs]"

      - name: Build docs
        run: |
          source .venv/bin/activate
          uv run --python .venv/bin/python mkdocs build --strict

      - name: Deploy to GitHub Pages
        if: |
          {% raw %}${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.actor != 'nektos/act' }}{% endraw %}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: |
            {% raw %}${{ github.token }}{% endraw %}
          publish_dir: ./site
